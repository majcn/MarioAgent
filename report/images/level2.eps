%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Sat Jan 19 15:00:06 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (majcn)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jan 19 15:00:06 2013)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1078 704 M
63 0 V
3883 0 R
-63 0 V
stroke
946 704 M
[ [(Helvetica) 220.0 0.0 true true 0 (-50)]
] -73.3 MRshow
1.000 UL
LTb
1078 1213 M
63 0 V
3883 0 R
-63 0 V
stroke
946 1213 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
1078 1722 M
63 0 V
3883 0 R
-63 0 V
stroke
946 1722 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 50)]
] -73.3 MRshow
1.000 UL
LTb
1078 2231 M
63 0 V
3883 0 R
-63 0 V
stroke
946 2231 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MRshow
1.000 UL
LTb
1078 2740 M
63 0 V
3883 0 R
-63 0 V
stroke
946 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 150)]
] -73.3 MRshow
1.000 UL
LTb
1078 3248 M
63 0 V
3883 0 R
-63 0 V
stroke
946 3248 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 200)]
] -73.3 MRshow
1.000 UL
LTb
1078 3757 M
63 0 V
3883 0 R
-63 0 V
stroke
946 3757 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 250)]
] -73.3 MRshow
1.000 UL
LTb
1078 4266 M
63 0 V
3883 0 R
-63 0 V
stroke
946 4266 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 300)]
] -73.3 MRshow
1.000 UL
LTb
1078 4775 M
63 0 V
3883 0 R
-63 0 V
stroke
946 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 350)]
] -73.3 MRshow
1.000 UL
LTb
1078 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1078 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
1642 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1642 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 20)]
] -73.3 MCshow
1.000 UL
LTb
2205 704 M
0 63 V
0 4008 R
0 -63 V
stroke
2205 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 40)]
] -73.3 MCshow
1.000 UL
LTb
2769 704 M
0 63 V
0 4008 R
0 -63 V
stroke
2769 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 60)]
] -73.3 MCshow
1.000 UL
LTb
3333 704 M
0 63 V
0 4008 R
0 -63 V
stroke
3333 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 80)]
] -73.3 MCshow
1.000 UL
LTb
3897 704 M
0 63 V
0 4008 R
0 -63 V
stroke
3897 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
4460 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4460 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 120)]
] -73.3 MCshow
1.000 UL
LTb
5024 704 M
0 63 V
0 4008 R
0 -63 V
stroke
5024 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 140)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1078 4775 N
0 -4071 V
3946 0 V
0 4071 V
-3946 0 V
Z stroke
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Vrednost)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
3051 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Epizoda)]
] -73.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6212 4665 M
[ [(Helvetica) 220.0 0.0 true true 0 (NAGRADA)]
] -73.3 MRshow
LT0
1078 1247 Pls
1106 1250 Pls
1134 1247 Pls
1163 1247 Pls
1191 1247 Pls
1219 1257 Pls
1247 1247 Pls
1275 1247 Pls
1303 1259 Pls
1332 1310 Pls
1360 1297 Pls
1388 1299 Pls
1416 1247 Pls
1444 1199 Pls
1473 1279 Pls
1501 1258 Pls
1529 1138 Pls
1557 1288 Pls
1585 1287 Pls
1614 1298 Pls
1642 1348 Pls
1670 1348 Pls
1698 1348 Pls
1726 1328 Pls
1754 1328 Pls
1783 1328 Pls
1811 1139 Pls
1839 1348 Pls
1867 1318 Pls
1895 1348 Pls
1924 1348 Pls
1952 1318 Pls
1980 1318 Pls
2008 1318 Pls
2036 1387 Pls
2065 1397 Pls
2093 1397 Pls
2121 1377 Pls
2149 1396 Pls
2177 1375 Pls
2205 1376 Pls
2234 1388 Pls
2262 1398 Pls
2290 1398 Pls
2318 1398 Pls
2346 1398 Pls
2375 1398 Pls
2403 1387 Pls
2431 1407 Pls
2459 1406 Pls
2487 1407 Pls
2515 1386 Pls
2544 1385 Pls
2572 1407 Pls
2600 1387 Pls
2628 1387 Pls
2656 1386 Pls
2685 1405 Pls
2713 1397 Pls
2741 1407 Pls
2769 1397 Pls
2797 1386 Pls
2826 1407 Pls
2854 1407 Pls
2882 1407 Pls
2910 1387 Pls
2938 1407 Pls
2966 1407 Pls
2995 1387 Pls
3023 1407 Pls
3051 1407 Pls
3079 1387 Pls
3107 1407 Pls
3136 1407 Pls
3164 1407 Pls
3192 1387 Pls
3220 1407 Pls
3248 1407 Pls
3276 1387 Pls
3305 1387 Pls
3333 1387 Pls
3361 1387 Pls
3389 1387 Pls
3417 1387 Pls
3446 1407 Pls
3474 1407 Pls
3502 1407 Pls
3530 1387 Pls
3558 1407 Pls
3587 1407 Pls
3615 1407 Pls
3643 1387 Pls
3671 1387 Pls
3699 1387 Pls
3727 1397 Pls
3756 1387 Pls
3784 1397 Pls
3812 1397 Pls
3840 1407 Pls
3868 1475 Pls
3897 1485 Pls
3925 1485 Pls
3953 1465 Pls
3981 1386 Pls
4009 1485 Pls
4038 1406 Pls
4066 1396 Pls
4094 1475 Pls
4122 1475 Pls
4150 1475 Pls
4178 1396 Pls
4207 2624 Pls
4235 2644 Pls
4263 2644 Pls
4291 2644 Pls
4319 2644 Pls
4348 2644 Pls
4376 2644 Pls
4404 2644 Pls
4432 2644 Pls
4460 2644 Pls
4488 2644 Pls
4517 2644 Pls
4545 2644 Pls
4573 2654 Pls
4601 2644 Pls
4629 2644 Pls
4658 1495 Pls
4686 2644 Pls
4714 2644 Pls
4742 2654 Pls
4770 2644 Pls
4799 2644 Pls
4827 2644 Pls
4855 2644 Pls
4883 2644 Pls
4911 2644 Pls
6639 4665 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
6212 4445 M
[ [(Helvetica) 220.0 0.0 true true 0 (POT)]
] -73.3 MRshow
LT1
1078 2765 Crs
1106 2198 Crs
1134 2765 Crs
1163 2765 Crs
1191 2765 Crs
1219 2765 Crs
1247 2765 Crs
1275 2765 Crs
1303 2441 Crs
1332 2442 Crs
1360 2765 Crs
1388 2441 Crs
1416 2765 Crs
1444 2195 Crs
1473 2441 Crs
1501 2441 Crs
1529 1712 Crs
1557 2762 Crs
1585 2762 Crs
1614 2762 Crs
1642 2877 Crs
1670 2877 Crs
1698 2877 Crs
1726 2877 Crs
1754 2877 Crs
1783 2877 Crs
1811 1713 Crs
1839 2877 Crs
1867 2877 Crs
1895 2877 Crs
1924 2877 Crs
1952 2874 Crs
1980 2874 Crs
2008 2871 Crs
2036 3143 Crs
2065 3143 Crs
2093 3143 Crs
2121 3143 Crs
2149 3143 Crs
2177 3143 Crs
2205 3140 Crs
2234 3016 Crs
2262 3020 Crs
2290 3001 Crs
2318 3009 Crs
2346 2994 Crs
2375 3001 Crs
2403 3140 Crs
2431 3143 Crs
2459 3144 Crs
2487 3137 Crs
2515 3140 Crs
2544 3143 Crs
2572 3138 Crs
2600 3143 Crs
2628 3142 Crs
2656 3138 Crs
2685 3142 Crs
2713 3143 Crs
2741 3141 Crs
2769 3144 Crs
2797 3144 Crs
2826 3143 Crs
2854 3144 Crs
2882 3144 Crs
2910 3143 Crs
2938 3144 Crs
2966 3143 Crs
2995 3143 Crs
3023 3143 Crs
3051 3143 Crs
3079 3133 Crs
3107 3144 Crs
3136 3140 Crs
3164 3135 Crs
3192 3140 Crs
3220 3144 Crs
3248 3143 Crs
3276 3143 Crs
3305 3143 Crs
3333 3144 Crs
3361 3143 Crs
3389 3143 Crs
3417 3144 Crs
3446 3144 Crs
3474 3143 Crs
3502 3143 Crs
3530 3137 Crs
3558 3138 Crs
3587 3137 Crs
3615 3136 Crs
3643 3136 Crs
3671 3135 Crs
3699 3134 Crs
3727 3143 Crs
3756 3134 Crs
3784 3134 Crs
3812 3143 Crs
3840 3129 Crs
3868 4128 Crs
3897 4128 Crs
3925 4126 Crs
3953 4126 Crs
3981 3533 Crs
4009 4126 Crs
4038 3529 Crs
4066 3530 Crs
4094 4126 Crs
4122 4123 Crs
4150 4123 Crs
4178 3530 Crs
4207 4444 Crs
4235 4444 Crs
4263 4444 Crs
4291 4444 Crs
4319 4444 Crs
4348 4444 Crs
4376 4444 Crs
4404 4444 Crs
4432 4444 Crs
4460 4444 Crs
4488 4444 Crs
4517 4444 Crs
4545 4444 Crs
4573 4440 Crs
4601 4444 Crs
4629 4444 Crs
4658 4206 Crs
4686 4444 Crs
4714 4444 Crs
4742 4444 Crs
4770 4444 Crs
4799 4444 Crs
4827 4444 Crs
4855 4444 Crs
4883 4444 Crs
4911 4444 Crs
6639 4445 Crs
% End plot #2
1.000 UL
LTb
1078 4775 N
0 -4071 V
3946 0 V
0 4071 V
-3946 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
